#
# Copyright Â© 2021. TIBCO Software Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

input {
  # Configure log service to forward accesslogs to TCP port 5400
  # https://docs.tibco.com/pub/mash-local/5.3.1/doc/html/GUID-C01F77C2-CDF8-46E1-BBB5-0BE850F283A7.html
 tcp {
    port => 5400
    codec => json
  }
}

filter{
  # Enrich the payload data
  ruby {
    code => 
      "event.set('client_transfer_time',event.get('client_transfer_time') * 1000)
       event.set('connect_time',event.get('connect_time') * 1000)
       event.set('pre_transfer_time',event.get('pre_transfer_time') * 1000)
       event.set('exec_time',event.get('exec_time') * 1000)
       event.set('remote_total_time',event.get('remote_total_time') * 1000)
       event.set('latency',event.get('exec_time') - event.get('remote_total_time'))
       event.set('ingestion_timestamp',event.get('@timestamp'))"
  }
  # Get to country & country code from src_ip. Uses Logstash's OOTB Maxmind GeoLite2.
  # For commercial databases : https://www.elastic.co/guide/en/logstash/current/plugins-filters-geoip.html

  geoip {
    source => "src_ip"
    fields => ["country_name","country_code2","location"]
  }
  # Get browser, device and OS details from user_agent
  useragent {
    source => "user_agent"
    target => "ua"
    add_field => {"browser"=>"%{[ua][name]}"}
    add_field => {"os"=>"%{[ua][os]}"}
    add_field => {"device"=>"%{[ua][device]}"}
  }
  # Replace timestamp with request_time
  date {
    match => ["request_time","ISO8601"]
  }
  mutate {
    remove_field => ["ua","message","request_time"]
  }
}

output {
  elasticsearch {
    hosts => "${ELASTICSEARCH_HOSTS}"
    index => "tml_access_logs_%{+YYYY.MM.DD}"
    template => "/usr/share/logstash/templates/index_template.json"
    template_name => "tml_access_logs"
    http_compression => true
  }
}

